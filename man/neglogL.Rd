% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neglogL.R
\name{neglogL}
\alias{neglogL}
\title{Compute the Negative Log-Likelihood for the Factor OUSSM Model}
\usage{
neglogL(para, p.dim, m.dim, N, ytn, tn.diff)
}
\arguments{
\item{para}{A numeric vector of model parameters, including elements of the state
transition matrix (\code{Theta}), observation matrix (\code{Z}), noise covariance
matrices (\code{H} and \code{Q}), and mean vector (\code{mu}).}

\item{p.dim}{An integer specifying the number of observed variables.}

\item{m.dim}{An integer specifying the number of latent state variables.}

\item{N}{An integer indicating the number of time points.}

\item{ytn}{A numeric matrix of observed data with dimensions \code{N x p.dim}.}

\item{tn.diff}{A numeric vector of length \code{N-1} representing time differences
between consecutive observations.}
}
\value{
A single numeric value representing the negative log-likelihood.
}
\description{
This function computes the negative log-likelihood for the Factor Ornstein-Uhlenbeck
State-Space Model (OUSSM) using the Kalman filter recursion.
}
\details{
The function follows these steps:
\itemize{
\item Extracts model parameters from \code{para} and reconstructs the matrices.
\item Constructs the state transition matrix (\code{Theta}) ensuring it is a
sum of an antisymmetric matrix and a diagonal matrix with decreasing diagonal elements.
\item Computes the state transition matrix exponentials (\code{C}) for unique time gaps.
\item Computes process noise covariance matrices (\code{Q}) using the Lyapunov equation.
\item Runs the Kalman filter to compute filtered state estimates and innovations.
\item Accumulates the log-likelihood using the computed innovation covariances.
}
}
\examples{
# Example usage (assuming required matrices and parameters are predefined)
para <- c(runif(3), log(runif(2)), runif(6), log(runif(2)), runif(2))
neglogL(para, p.dim = 2, m.dim = 2, N = 10, ytn = matrix(rnorm(20), 10, 2), tn.diff = rep(1, 9))
}
